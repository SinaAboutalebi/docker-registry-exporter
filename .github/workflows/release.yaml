name: 🐋 Docker Release

on:
  push:
    branches:
    - main
    tags: ['v*.*.*']

env:
  IMAGE_NAME: ${{ github.repository }}
  TAG: ${{ github.sha }}

jobs:

  build:
    name: ⚙️ Build
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v3

    - name: 👤 Login to registry
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: 🚀 Build and Push Docker image
      id: docker_build
      uses: docker/build-push-action@v5
      with:
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/docker-registry-exporter:latest

  test:
    name: 🧪 Test
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v3

    - name: 🐋 Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: 🚀 Pull Docker image
      run: docker pull ${{ secrets.DOCKER_USERNAME }}/docker-registry-exporter:latest

    - name: ⏳ Wait for container to start
      id: docker_run
      run: docker run --rm -d --name test-exporter ${{ secrets.DOCKER_USERNAME }}/docker-registry-exporter:latest -e REGISTRY_ADDRESS=docker.io
    - run: docker ps -a
    #   run: |
    #     retries=0
    #     until [ $retries -ge 5 ]
    #     do
    #       sleep 10
    #       docker inspect --format='{{json .State.Health.Status}}' ${{ steps.docker_run.outputs }} | grep -q healthy && break
    #       retries=$((retries+1))
    #     done
    #     docker inspect --format='{{json .State.Health.Status}}' ${{ steps.docker_run.outputs }} | grep -q healthy || exit 1

    - name: 🧹 Clean up
      # - name: 🛡️ Wait for health check to pass
      run: docker rm -f ${{ steps.docker_run.outputs }}

  release:
    name: 🚀 Release
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v3

    - name: ⚒️ Set up node
      uses: actions/setup-node@v3
      with:
        node-version: lts/*

    - run: cp .github/.releaserc.yaml .
    - run: npm i -g semantic-release @semantic-release/changelog @semantic-release/git
    - run: semantic-release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
